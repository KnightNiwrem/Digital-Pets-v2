/**
 * Items database
 * Contains all item definitions in the game
 */

import type {
  Item,
  FoodItem,
  DrinkItem,
  ToyItem,
  MedicineItem,
  BandageItem,
  EnergyBoosterItem,
  ToolItem,
  MaterialItem,
  EggItem,
  CurrencyItem,
} from '../models/Item';
import type { ItemCategory, RarityTier } from '../models/constants';
import {
  ITEM_CATEGORIES,
  RARITY_TIERS,
  EFFECT_SIZES,
  TOOL_TYPES,
  STACK_LIMITS,
} from '../models/constants';

/**
 * All available items in the game
 */
export const ITEMS_DATA: Record<string, Item> = {
  // ========== FOOD ITEMS ==========
  basic_berries: {
    id: 'basic_berries',
    name: 'Basic Berries',
    description: 'Simple berries that restore a small amount of satiety',
    category: ITEM_CATEGORIES.FOOD,
    sprite: 'sprites/items/basic_berries.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 5,
    buyPrice: 10,
    rarity: RARITY_TIERS.COMMON,
    consumable: true,
    effectSize: EFFECT_SIZES.SMALL,
    satietyRestore: 20,
    happinessBonus: 5,
  } as FoodItem,

  sweet_berries: {
    id: 'sweet_berries',
    name: 'Sweet Berries',
    description: 'Delicious berries that restore satiety and boost happiness',
    category: ITEM_CATEGORIES.FOOD,
    sprite: 'sprites/items/sweet_berries.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 10,
    buyPrice: 20,
    rarity: RARITY_TIERS.COMMON,
    consumable: true,
    effectSize: EFFECT_SIZES.MEDIUM,
    satietyRestore: 35,
    happinessBonus: 10,
  } as FoodItem,

  spicy_berries: {
    id: 'spicy_berries',
    name: 'Spicy Berries',
    description: 'Hot berries favored by fire-type pets',
    category: ITEM_CATEGORIES.FOOD,
    sprite: 'sprites/items/spicy_berries.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 15,
    buyPrice: 30,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: true,
    effectSize: EFFECT_SIZES.MEDIUM,
    satietyRestore: 40,
    happinessBonus: 8,
    specialEffect: {
      type: 'energy_boost',
      value: 10,
      duration: 30,
    },
  } as FoodItem,

  flame_fruit: {
    id: 'flame_fruit',
    name: 'Flame Fruit',
    description: 'A rare fruit that burns with inner heat',
    category: ITEM_CATEGORIES.FOOD,
    sprite: 'sprites/items/flame_fruit.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 50,
    buyPrice: 100,
    rarity: RARITY_TIERS.RARE,
    consumable: true,
    effectSize: EFFECT_SIZES.LARGE,
    satietyRestore: 60,
    happinessBonus: 15,
    specialEffect: {
      type: 'growth_boost',
      value: 20,
      duration: 60,
    },
  } as FoodItem,

  fresh_leaves: {
    id: 'fresh_leaves',
    name: 'Fresh Leaves',
    description: 'Nutritious leaves favored by grass-type pets',
    category: ITEM_CATEGORIES.FOOD,
    sprite: 'sprites/items/fresh_leaves.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 8,
    buyPrice: 15,
    rarity: RARITY_TIERS.COMMON,
    consumable: true,
    effectSize: EFFECT_SIZES.SMALL,
    satietyRestore: 25,
    happinessBonus: 5,
  } as FoodItem,

  seaweed_snack: {
    id: 'seaweed_snack',
    name: 'Seaweed Snack',
    description: 'Salty seaweed loved by water-type pets',
    category: ITEM_CATEGORIES.FOOD,
    sprite: 'sprites/items/seaweed_snack.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 10,
    buyPrice: 20,
    rarity: RARITY_TIERS.COMMON,
    consumable: true,
    effectSize: EFFECT_SIZES.SMALL,
    satietyRestore: 25,
    happinessBonus: 7,
  } as FoodItem,

  fish_treat: {
    id: 'fish_treat',
    name: 'Fish Treat',
    description: 'Dried fish that provides excellent nutrition',
    category: ITEM_CATEGORIES.FOOD,
    sprite: 'sprites/items/fish_treat.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 25,
    buyPrice: 50,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: true,
    effectSize: EFFECT_SIZES.MEDIUM,
    satietyRestore: 45,
    happinessBonus: 12,
    specialEffect: {
      type: 'cure_sickness',
      value: 5,
      duration: 30,
    },
  } as FoodItem,

  gourmet_meal: {
    id: 'gourmet_meal',
    name: 'Gourmet Meal',
    description: 'A luxurious meal that fully satisfies hunger',
    category: ITEM_CATEGORIES.FOOD,
    sprite: 'sprites/items/gourmet_meal.png',
    stackable: true,
    maxStack: 20,
    sellPrice: 100,
    buyPrice: 200,
    rarity: RARITY_TIERS.RARE,
    consumable: true,
    effectSize: EFFECT_SIZES.LARGE,
    satietyRestore: 80,
    happinessBonus: 25,
    specialEffect: {
      type: 'growth_boost',
      value: 100,
      duration: 120,
    },
  } as FoodItem,

  // ========== DRINK ITEMS ==========
  fresh_water: {
    id: 'fresh_water',
    name: 'Fresh Water',
    description: 'Clean water that restores hydration',
    category: ITEM_CATEGORIES.DRINK,
    sprite: 'sprites/items/fresh_water.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 3,
    buyPrice: 5,
    rarity: RARITY_TIERS.COMMON,
    consumable: true,
    effectSize: EFFECT_SIZES.SMALL,
    hydrationRestore: 25,
  } as DrinkItem,

  mineral_water: {
    id: 'mineral_water',
    name: 'Mineral Water',
    description: 'Refreshing water with minerals that boost energy',
    category: ITEM_CATEGORIES.DRINK,
    sprite: 'sprites/items/mineral_water.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 10,
    buyPrice: 20,
    rarity: RARITY_TIERS.COMMON,
    consumable: true,
    effectSize: EFFECT_SIZES.MEDIUM,
    hydrationRestore: 40,
    energyBonus: 10,
  } as DrinkItem,

  fruit_juice: {
    id: 'fruit_juice',
    name: 'Fruit Juice',
    description: 'Sweet juice that hydrates and energizes',
    category: ITEM_CATEGORIES.DRINK,
    sprite: 'sprites/items/fruit_juice.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 15,
    buyPrice: 30,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: true,
    effectSize: EFFECT_SIZES.MEDIUM,
    hydrationRestore: 45,
    energyBonus: 15,
    specialEffect: {
      type: 'speed_boost',
      value: 10,
      duration: 30,
    },
  } as DrinkItem,

  energy_drink: {
    id: 'energy_drink',
    name: 'Energy Drink',
    description: 'Powerful drink that fully restores hydration and energy',
    category: ITEM_CATEGORIES.DRINK,
    sprite: 'sprites/items/energy_drink.png',
    stackable: true,
    maxStack: 50,
    sellPrice: 50,
    buyPrice: 100,
    rarity: RARITY_TIERS.RARE,
    consumable: true,
    effectSize: EFFECT_SIZES.LARGE,
    hydrationRestore: 60,
    energyBonus: 30,
    specialEffect: {
      type: 'happiness_boost',
      value: 50,
      duration: 45,
    },
  } as DrinkItem,

  // ========== TOY ITEMS ==========
  simple_ball: {
    id: 'simple_ball',
    name: 'Simple Ball',
    description: 'A basic ball for playing catch',
    category: ITEM_CATEGORIES.TOY,
    sprite: 'sprites/items/simple_ball.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 10,
    buyPrice: 20,
    rarity: RARITY_TIERS.COMMON,
    consumable: false,
    effectSize: EFFECT_SIZES.SMALL,
    happinessIncrease: 15,
    energyCost: 10,
    durability: 20,
    interactionTime: 5,
  } as ToyItem,

  fire_ball: {
    id: 'fire_ball',
    name: 'Fire Ball',
    description: 'A warm ball that fire-type pets love',
    category: ITEM_CATEGORIES.TOY,
    sprite: 'sprites/items/fire_ball.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 25,
    buyPrice: 50,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: false,
    effectSize: EFFECT_SIZES.MEDIUM,
    happinessIncrease: 25,
    energyCost: 15,
    durability: 30,
    interactionTime: 7,
  } as ToyItem,

  water_ball: {
    id: 'water_ball',
    name: 'Water Ball',
    description: 'A splashy ball that water-type pets enjoy',
    category: ITEM_CATEGORIES.TOY,
    sprite: 'sprites/items/water_ball.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 25,
    buyPrice: 50,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: false,
    effectSize: EFFECT_SIZES.MEDIUM,
    happinessIncrease: 25,
    energyCost: 15,
    durability: 30,
    interactionTime: 7,
  } as ToyItem,

  leaf_ball: {
    id: 'leaf_ball',
    name: 'Leaf Ball',
    description: 'A natural ball made from woven leaves',
    category: ITEM_CATEGORIES.TOY,
    sprite: 'sprites/items/leaf_ball.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 25,
    buyPrice: 50,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: false,
    effectSize: EFFECT_SIZES.MEDIUM,
    happinessIncrease: 25,
    energyCost: 15,
    durability: 25,
    interactionTime: 7,
  } as ToyItem,

  lava_lamp: {
    id: 'lava_lamp',
    name: 'Lava Lamp',
    description: 'A mesmerizing lamp that pets love to watch',
    category: ITEM_CATEGORIES.TOY,
    sprite: 'sprites/items/lava_lamp.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 75,
    buyPrice: 150,
    rarity: RARITY_TIERS.RARE,
    consumable: false,
    effectSize: EFFECT_SIZES.LARGE,
    happinessIncrease: 40,
    energyCost: 5,
    durability: undefined, // Doesn't break
    interactionTime: 10,
  } as ToyItem,

  bubble_wand: {
    id: 'bubble_wand',
    name: 'Bubble Wand',
    description: 'Creates beautiful bubbles for pets to chase',
    category: ITEM_CATEGORIES.TOY,
    sprite: 'sprites/items/bubble_wand.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 30,
    buyPrice: 60,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: false,
    effectSize: EFFECT_SIZES.MEDIUM,
    happinessIncrease: 30,
    energyCost: 20,
    durability: 15,
    interactionTime: 8,
  } as ToyItem,

  vine_rope: {
    id: 'vine_rope',
    name: 'Vine Rope',
    description: 'A sturdy rope made from vines for tug-of-war',
    category: ITEM_CATEGORIES.TOY,
    sprite: 'sprites/items/vine_rope.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 20,
    buyPrice: 40,
    rarity: RARITY_TIERS.COMMON,
    consumable: false,
    effectSize: EFFECT_SIZES.SMALL,
    happinessIncrease: 20,
    energyCost: 15,
    durability: 25,
    interactionTime: 6,
  } as ToyItem,

  // ========== MEDICINE ITEMS ==========
  basic_medicine: {
    id: 'basic_medicine',
    name: 'Basic Medicine',
    description: 'Simple medicine that cures common sickness',
    category: ITEM_CATEGORIES.MEDICINE,
    sprite: 'sprites/items/basic_medicine.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 25,
    buyPrice: 50,
    rarity: RARITY_TIERS.COMMON,
    consumable: true,
    effectiveness: 80,
    curesStatus: 'sickness',
    healingAmount: 10,
    preventionDuration: 12,
  } as MedicineItem,

  strong_medicine: {
    id: 'strong_medicine',
    name: 'Strong Medicine',
    description: 'Powerful medicine that quickly cures sickness',
    category: ITEM_CATEGORIES.MEDICINE,
    sprite: 'sprites/items/strong_medicine.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 75,
    buyPrice: 150,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: true,
    effectiveness: 95,
    curesStatus: 'sickness',
    healingAmount: 25,
    preventionDuration: 24,
  } as MedicineItem,

  antidote: {
    id: 'antidote',
    name: 'Antidote',
    description: 'Cures poison status',
    category: ITEM_CATEGORIES.MEDICINE,
    sprite: 'sprites/items/antidote.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 30,
    buyPrice: 60,
    rarity: RARITY_TIERS.COMMON,
    consumable: true,
    usableInBattle: true,
    effectiveness: 100,
    curesStatus: 'poison',
  } as MedicineItem,

  paralyze_heal: {
    id: 'paralyze_heal',
    name: 'Paralyze Heal',
    description: 'Cures paralysis status',
    category: ITEM_CATEGORIES.MEDICINE,
    sprite: 'sprites/items/paralyze_heal.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 30,
    buyPrice: 60,
    rarity: RARITY_TIERS.COMMON,
    consumable: true,
    usableInBattle: true,
    effectiveness: 100,
    curesStatus: 'paralysis',
  } as MedicineItem,

  full_heal: {
    id: 'full_heal',
    name: 'Full Heal',
    description: 'Cures all status ailments',
    category: ITEM_CATEGORIES.MEDICINE,
    sprite: 'sprites/items/full_heal.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 100,
    buyPrice: 200,
    rarity: RARITY_TIERS.RARE,
    consumable: true,
    usableInBattle: true,
    effectiveness: 100,
    curesStatus: 'all',
    healingAmount: 50,
  } as MedicineItem,

  // ========== BANDAGE ITEMS ==========
  simple_bandage: {
    id: 'simple_bandage',
    name: 'Simple Bandage',
    description: 'Basic bandage for treating minor injuries',
    category: ITEM_CATEGORIES.BANDAGE,
    sprite: 'sprites/items/simple_bandage.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 20,
    buyPrice: 40,
    rarity: RARITY_TIERS.COMMON,
    consumable: true,
    effectiveness: 70,
    healingSeverityReduction: 1,
    instantHeal: false,
    movementSpeedRestore: 25,
  } as BandageItem,

  medical_bandage: {
    id: 'medical_bandage',
    name: 'Medical Bandage',
    description: 'Professional bandage for treating injuries',
    category: ITEM_CATEGORIES.BANDAGE,
    sprite: 'sprites/items/medical_bandage.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 50,
    buyPrice: 100,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: true,
    effectiveness: 90,
    healingSeverityReduction: 2,
    instantHeal: true,
    movementSpeedRestore: 50,
  } as BandageItem,

  // ========== ENERGY BOOSTER ITEMS ==========
  energy_pill: {
    id: 'energy_pill',
    name: 'Energy Pill',
    description: 'Quick energy boost with minor side effects',
    category: ITEM_CATEGORIES.ENERGY_BOOSTER,
    sprite: 'sprites/items/energy_pill.png',
    stackable: true,
    maxStack: STACK_LIMITS.DEFAULT,
    sellPrice: 30,
    buyPrice: 60,
    rarity: RARITY_TIERS.COMMON,
    consumable: true,
    energyRestore: 30,
    instantRestore: true,
    cooldownMinutes: 5,
    sideEffect: {
      type: 'crash',
      delay: 30,
      duration: 15,
    },
  } as EnergyBoosterItem,

  super_energy: {
    id: 'super_energy',
    name: 'Super Energy',
    description: 'Powerful energy restoration with no side effects',
    category: ITEM_CATEGORIES.ENERGY_BOOSTER,
    sprite: 'sprites/items/super_energy.png',
    stackable: true,
    maxStack: 50,
    sellPrice: 100,
    buyPrice: 200,
    rarity: RARITY_TIERS.RARE,
    consumable: true,
    energyRestore: 60,
    instantRestore: true,
    cooldownMinutes: 10,
  } as EnergyBoosterItem,

  // ========== MATERIAL ITEMS (stubs for repairs and refining) ==========
  refined_wood: {
    id: 'refined_wood',
    name: 'Refined Wood',
    description: 'Processed wood suitable for advanced crafting',
    category: ITEM_CATEGORIES.MATERIAL,
    sprite: 'sprites/items/refined_wood.png',
    stackable: true,
    maxStack: STACK_LIMITS.MATERIALS,
    sellPrice: 8,
    buyPrice: 16,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: false,
    materialType: 'wood',
    quality: 'fine',
    craftingIngredient: true,
  } as MaterialItem,

  strong_string: {
    id: 'strong_string',
    name: 'Strong String',
    description: 'Reinforced string used for sturdy tools',
    category: ITEM_CATEGORIES.MATERIAL,
    sprite: 'sprites/items/strong_string.png',
    stackable: true,
    maxStack: STACK_LIMITS.MATERIALS,
    sellPrice: 6,
    buyPrice: 12,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: false,
    materialType: 'fabric',
    quality: 'fine',
    craftingIngredient: true,
  } as MaterialItem,

  iron_ingot: {
    id: 'iron_ingot',
    name: 'Iron Ingot',
    description: 'Refined iron ready for crafting',
    category: ITEM_CATEGORIES.MATERIAL,
    sprite: 'sprites/items/iron_ingot.png',
    stackable: true,
    maxStack: STACK_LIMITS.MATERIALS,
    sellPrice: 15,
    buyPrice: 30,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: false,
    materialType: 'ore',
    quality: 'fine',
    craftingIngredient: true,
  } as MaterialItem,

  // ========== TOOL ITEMS ==========
  basic_fishing_rod: {
    id: 'basic_fishing_rod',
    name: 'Basic Fishing Rod',
    description: 'A simple rod for catching fish',
    category: ITEM_CATEGORIES.TOOL,
    sprite: 'sprites/items/basic_fishing_rod.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 50,
    buyPrice: 100,
    rarity: RARITY_TIERS.COMMON,
    consumable: false,
    toolType: TOOL_TYPES.FISHING_ROD,
    tier: 'basic',
    durability: 50,
    currentDurability: 50,
    efficiencyBonus: 0,
    speedBonus: 0,
    rareFindBonus: 5,
    bonuses: {
      fishing: 10,
    },
    repairCost: 25,
    repairMaterials: [
      { itemId: 'wood', quantity: 2 },
      { itemId: 'string', quantity: 1 },
    ],
  } as ToolItem,

  advanced_fishing_rod: {
    id: 'advanced_fishing_rod',
    name: 'Advanced Fishing Rod',
    description: 'A quality rod that improves fishing results',
    category: ITEM_CATEGORIES.TOOL,
    sprite: 'sprites/items/advanced_fishing_rod.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 150,
    buyPrice: 300,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: false,
    toolType: TOOL_TYPES.FISHING_ROD,
    tier: 'advanced',
    durability: 100,
    currentDurability: 100,
    efficiencyBonus: 20,
    speedBonus: 15,
    rareFindBonus: 15,
    bonuses: {
      fishing: 25,
    },
    repairCost: 75,
    repairMaterials: [
      { itemId: 'refined_wood', quantity: 3 },
      { itemId: 'strong_string', quantity: 2 },
    ],
  } as ToolItem,

  basic_pickaxe: {
    id: 'basic_pickaxe',
    name: 'Basic Pickaxe',
    description: 'A simple pickaxe for mining',
    category: ITEM_CATEGORIES.TOOL,
    sprite: 'sprites/items/basic_pickaxe.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 75,
    buyPrice: 150,
    rarity: RARITY_TIERS.COMMON,
    consumable: false,
    minStageRequired: 'JUVENILE',
    toolType: TOOL_TYPES.PICKAXE,
    tier: 'basic',
    durability: 75,
    currentDurability: 75,
    efficiencyBonus: 0,
    speedBonus: 0,
    rareFindBonus: 10,
    bonuses: {
      mining: 15,
    },
    repairCost: 40,
    repairMaterials: [
      { itemId: 'stone', quantity: 3 },
      { itemId: 'wood', quantity: 2 },
    ],
  } as ToolItem,

  basic_net: {
    id: 'basic_net',
    name: 'Basic Net',
    description: 'A simple net for catching bugs',
    category: ITEM_CATEGORIES.TOOL,
    sprite: 'sprites/items/basic_net.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 40,
    buyPrice: 80,
    rarity: RARITY_TIERS.COMMON,
    consumable: false,
    toolType: TOOL_TYPES.FORAGING_BASKET,
    tier: 'basic',
    durability: 40,
    currentDurability: 40,
    efficiencyBonus: 0,
    speedBonus: 10,
    rareFindBonus: 5,
    bonuses: {
      bug_catching: 10,
    },
    repairCost: 20,
    repairMaterials: [
      { itemId: 'string', quantity: 3 },
      { itemId: 'wood', quantity: 1 },
    ],
  } as ToolItem,

  // ========== MATERIAL ITEMS ==========
  wood: {
    id: 'wood',
    name: 'Wood',
    description: 'Basic wood used for crafting',
    category: ITEM_CATEGORIES.MATERIAL,
    sprite: 'sprites/items/wood.png',
    stackable: true,
    maxStack: STACK_LIMITS.MATERIALS,
    sellPrice: 2,
    buyPrice: 5,
    rarity: RARITY_TIERS.COMMON,
    consumable: false,
    materialType: 'wood',
    quality: 'normal',
    craftingIngredient: true,
    refinable: {
      outputItemId: 'refined_wood',
      outputQuantity: 1,
      requiredQuantity: 3,
    },
  } as MaterialItem,

  stone: {
    id: 'stone',
    name: 'Stone',
    description: 'Common stone used for crafting',
    category: ITEM_CATEGORIES.MATERIAL,
    sprite: 'sprites/items/stone.png',
    stackable: true,
    maxStack: STACK_LIMITS.MATERIALS,
    sellPrice: 1,
    buyPrice: 3,
    rarity: RARITY_TIERS.COMMON,
    consumable: false,
    materialType: 'ore',
    quality: 'normal',
    craftingIngredient: true,
  } as MaterialItem,

  string: {
    id: 'string',
    name: 'String',
    description: 'Basic string used for crafting',
    category: ITEM_CATEGORIES.MATERIAL,
    sprite: 'sprites/items/string.png',
    stackable: true,
    maxStack: STACK_LIMITS.MATERIALS,
    sellPrice: 3,
    buyPrice: 6,
    rarity: RARITY_TIERS.COMMON,
    consumable: false,
    materialType: 'fabric',
    quality: 'normal',
    craftingIngredient: true,
    refinable: {
      outputItemId: 'strong_string',
      outputQuantity: 1,
      requiredQuantity: 2,
    },
  } as MaterialItem,

  iron_ore: {
    id: 'iron_ore',
    name: 'Iron Ore',
    description: 'Raw iron ore that can be refined',
    category: ITEM_CATEGORIES.MATERIAL,
    sprite: 'sprites/items/iron_ore.png',
    stackable: true,
    maxStack: STACK_LIMITS.MATERIALS,
    sellPrice: 5,
    buyPrice: 10,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: false,
    materialType: 'ore',
    quality: 'fine',
    craftingIngredient: false,
    refinable: {
      outputItemId: 'iron_ingot',
      outputQuantity: 1,
      requiredQuantity: 2,
      requiresTool: 'furnace',
    },
  } as MaterialItem,

  // ========== EGG ITEMS ==========
  common_egg: {
    id: 'common_egg',
    name: 'Common Egg',
    description: 'A mysterious egg that could hatch into a common pet',
    category: ITEM_CATEGORIES.EGG,
    sprite: 'sprites/items/common_egg.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 50,
    buyPrice: 100,
    rarity: RARITY_TIERS.COMMON,
    consumable: false,
    eggType: 'common',
    obtainedFrom: 'activity',
    incubationDuration: 12,
  } as EggItem,

  uncommon_egg: {
    id: 'uncommon_egg',
    name: 'Uncommon Egg',
    description: 'A special egg that could hatch into an uncommon pet',
    category: ITEM_CATEGORIES.EGG,
    sprite: 'sprites/items/uncommon_egg.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 150,
    buyPrice: 300,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: false,
    eggType: 'uncommon',
    obtainedFrom: 'shop',
    incubationDuration: 18,
  } as EggItem,

  rare_egg: {
    id: 'rare_egg',
    name: 'Rare Egg',
    description: 'A rare egg that could hatch into a rare pet',
    category: ITEM_CATEGORIES.EGG,
    sprite: 'sprites/items/rare_egg.png',
    stackable: false,
    maxStack: 1,
    sellPrice: 500,
    buyPrice: 1000,
    rarity: RARITY_TIERS.RARE,
    consumable: false,
    eggType: 'rare',
    obtainedFrom: 'event',
    incubationDuration: 24,
  } as EggItem,

  // ========== CURRENCY ITEMS ==========
  event_token: {
    id: 'event_token',
    name: 'Event Token',
    description: 'Special currency earned during events',
    category: ITEM_CATEGORIES.CURRENCY,
    sprite: 'sprites/items/event_token.png',
    stackable: true,
    maxStack: STACK_LIMITS.CURRENCY,
    sellPrice: 0,
    buyPrice: 0,
    rarity: RARITY_TIERS.UNCOMMON,
    consumable: false,
    currencyType: 'event_tokens',
  } as CurrencyItem,
};

/**
 * Get an item by ID
 */
export function getItemById(itemId: string): Item | undefined {
  return ITEMS_DATA[itemId] || undefined;
}

/**
 * Get all items as an array
 */
export function getAllItems(): Item[] {
  return Object.values(ITEMS_DATA);
}

/**
 * Get items by category
 */
export function getItemsByCategory(category: ItemCategory): Item[] {
  return Object.values(ITEMS_DATA).filter((item) => item.category === category);
}

/**
 * Get items by rarity
 */
export function getItemsByRarity(rarity: RarityTier): Item[] {
  return Object.values(ITEMS_DATA).filter((item) => item.rarity === rarity);
}
